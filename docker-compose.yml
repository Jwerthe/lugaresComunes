services:
  # Base de datos MySQL
  mysql-db:
    image: mysql:8.0
    container_name: lugares-comunes-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: lugares_comunes
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - lugares-comunes-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Aplicación Spring Boot
  lugares-comunes-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lugares-comunes-api
    restart: unless-stopped
    environment:
      # Base de datos
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_NAME: lugares_comunes
      DB_USERNAME: root
      DB_PASSWORD: root_password
      
      # JWT Configuration
      JWT_SECRET: lugares_comunes_jwt_secret_key_very_secure_2024_spring_boot_app
      JWT_EXPIRATION: 86400000
      
      # Logging
      LOG_LEVEL: INFO
      SHOW_SQL: false
      
      # Server
      SERVER_PORT: 8080
      
      # CORS
      ALLOWED_ORIGINS: "*"
      
      # Spring Profile
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - lugares-comunes-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Opcional: Adminer para administrar la base de datos
  adminer:
    image: adminer
    container_name: lugares-comunes-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql-db
    depends_on:
      - mysql-db
    networks:
      - lugares-comunes-network

# Volúmenes persistentes
volumes:
  mysql_data:
    driver: local

# Red personalizada
networks:
  lugares-comunes-network:
    driver: bridge