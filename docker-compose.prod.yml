version: '3.8'

services:
  # Base de datos MySQL
  mysql-db:
    image: mysql:8.0
    container_name: lugares-comunes-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password_change_me}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-lugares_comunes}
      MYSQL_USER: ${MYSQL_USER:-app_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_app_password_change_me}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - lugares-comunes-network-prod
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Aplicación Spring Boot - USANDO IMAGEN DE DOCKERHUB
  lugares-comunes-api:
    # CAMBIAR: Reemplaza 'tu-usuario-dockerhub' por tu usuario real de DockerHub
    image: tu-usuario-dockerhub/lugares-comunes-api:latest
    container_name: lugares-comunes-api-prod
    restart: unless-stopped
    environment:
      # Base de datos
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-lugares_comunes}
      DB_USERNAME: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password_change_me}
      
      # JWT Configuration - CAMBIAR EN PRODUCCIÓN
      JWT_SECRET: ${JWT_SECRET:-lugares_comunes_jwt_secret_key_very_secure_2024_CHANGE_ME_IN_PRODUCTION}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-WARN}
      SHOW_SQL: ${SHOW_SQL:-false}
      
      # Server
      SERVER_PORT: 8080
      
      # CORS - CAMBIAR EN PRODUCCIÓN
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-https://tu-dominio.com,https://tu-app.azurewebsites.net}
      
      # Spring Profile
      SPRING_PROFILES_ACTIVE: docker
      
      # JVM Options para VM con recursos limitados
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:MaxMetaspaceSize=128m -XX:+UseG1GC -XX:+UseStringDeduplication"
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - lugares-comunes-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/health"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M

  # Opcional: Adminer para administrar la base de datos (COMENTAR EN PRODUCCIÓN)
  adminer:
    image: adminer:latest
    container_name: lugares-comunes-adminer-prod
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql-db
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      - mysql-db
    networks:
      - lugares-comunes-network-prod
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    # Comentar o eliminar este servicio en producción por seguridad
    profiles:
      - debug

# Volúmenes persistentes
volumes:
  mysql_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/lugares-comunes/mysql-data

# Red personalizada
networks:
  lugares-comunes-network-prod:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450